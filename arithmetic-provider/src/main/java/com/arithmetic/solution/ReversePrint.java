package com.arithmetic.solution;import java.util.Stack;/** * @author Zhang Yu * @date 2022/3/6 10:54 PM */public class ReversePrint {    public int[] reversePrint(ListNode head) {        Stack<ListNode> stack = new Stack<>();        ListNode temp = head;        while (temp != null) {            stack.push(temp);            temp = temp.next;        }        int[] print = new int[stack.size()];        for (int i = 0; i < stack.size(); i++) {            print[i] = stack.pop().val;        }        return print;    }    public static ListNode reverseList(ListNode head) {        ListNode prev = null;        ListNode curr = head;        while (curr != null) {            ListNode next = curr.next;            curr.next = prev;            prev = curr;            curr = next;        }        return prev;    }    public static void main(String[] args) {        ListNode nodeStart = new ListNode(1);        ListNode nextNode = nodeStart;        for (int i = 2; i < 6; i++) {            ListNode node = new ListNode(i);            nextNode.next = node;            nextNode = nextNode.next;        }        nextNode = nodeStart;        reverseList(nextNode);    }}