package com.arithmetic.solution;/** * @author Zhang Yu * @date 2022/3/7 11:18 PM * 在排序数组中查找数字 */public class Search {    public int binarySearch(int[] nums, int target, boolean lower) {        int left = 0;        int right = nums.length - 1;        int result = nums.length;        while (left <= result) {            int mid = (left + right) / 2;            if (nums[mid] > target || (lower && nums[mid] >= target)) {                right = mid - 1;                result = mid;            } else {                left = mid + 1;            }        }        return result;    }    public int search(int[] nums, int target) {        int temp = -1;        int count = 0;        for (int i = 0; i < nums.length; i++) {            if (temp != -1 && nums[i] != target){                return count;            }            if (nums[i] == target){                temp = nums[i];                count ++;            }        }        return count;    }}